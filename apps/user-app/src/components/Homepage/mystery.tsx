"use client";
import React from "react";
import { useModalStore } from "@/store/modal.store";
import HorizontalSlider from "@/components/Homepage/mystery-card-slider";
import MysteryCardSlider from "@/components/Homepage/mystery-card-slider";
import { useAudioPlayerStore } from "@/store/audioplayer.store";


const Mystery: React.FC = () => {
  const {
      albumSongs,
      currentSongIndex,
      playSong,
      setCurrentSongIndex,
      setDiscovered,
      setShowStreamingLinks,
    } = useAudioPlayerStore();
  const { openModal } = useModalStore();

  const playRandomSong = () => {
    if (!albumSongs.length) return;

    let randomIndex = Math.floor(Math.random() * albumSongs.length);
    while (albumSongs.length > 1 && randomIndex === currentSongIndex) {
      randomIndex = Math.floor(Math.random() * albumSongs.length);
    }

    const randomSong = albumSongs[randomIndex];
    if (!randomSong?.id) {
      console.warn("Song object or song ID is missing.");
      return;
    }

    setDiscovered(false);
    setShowStreamingLinks(false);

    setCurrentSongIndex(randomIndex);
    playSong(randomSong.id);

    openModal();
  };

  return (
    <div className="mx-auto my-10 flex md:h-[400px] h-[330px] w-full flex-col gap-5 overflow-hidden">
      <div className="flex w-full items-center justify-between px-6">
        <div >
          <h1 className="md:text-[25px] text-[20px] font-semibold">Feeling Lucky?</h1>
          <p className="text-[14px]">
            Listen to mystery songs and earn top rewards
          </p>
        </div>
        <div
          onClick={playRandomSong}
          className=" hidden md:flex cursor-pointer items-center  gap-[4px] rounded-[120px] text-white bg-[#292929] px-[20px] py-[10px]"
        >
         <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
  <path d="M10.8489 13.4662C11.2685 13.6304 11.6586 13.7556 12.0137 13.8433L12.0187 13.8445C12.6543 14.0011 13.1593 14.0326 13.5183 13.9683C13.6196 13.9502 13.705 13.9256 13.777 13.8959C13.9527 13.8221 14.0492 13.7173 14.1001 13.6088C14.1586 13.4842 14.1857 13.3035 14.1517 13.0577C14.1335 12.9258 14.0976 12.7749 14.0395 12.6035C14.0306 12.5775 14.0213 12.5511 14.0115 12.5245C13.9326 12.3091 13.8242 12.0761 13.6869 11.8287L13.6795 11.8155C13.6597 11.7801 13.6394 11.7445 13.6185 11.7085C13.4354 11.3937 13.2077 11.0579 12.9373 10.7068L12.9344 10.703C12.0033 9.49561 10.6077 8.16374 8.93106 6.97272C7.15386 5.71029 5.43362 4.87074 4.10188 4.51891C4.06361 4.5088 4.02578 4.49912 3.98839 4.48988L3.98138 4.4882C3.34567 4.33166 2.84067 4.30006 2.48175 4.36432C2.33809 4.39004 2.22654 4.42876 2.13985 4.47656C2.01642 4.54469 1.94339 4.63114 1.89988 4.72386C1.8249 4.88364 1.80555 5.12878 1.88394 5.46436C1.90853 5.56922 1.94285 5.68368 1.98848 5.80821C2.03908 5.94631 2.10172 6.0914 2.17617 6.24267C2.18681 6.26428 2.19773 6.28609 2.20894 6.30812L2.22841 6.34606C2.25114 6.38994 2.27479 6.43424 2.29935 6.47894C2.49486 6.83486 2.7502 7.22028 3.06273 7.62588L3.06462 7.62834C3.40053 8.06408 3.79914 8.51888 4.25348 8.98008C4.35665 9.08481 4.45249 9.18128 4.5415 9.27001L4.55754 9.06454C4.62448 8.20714 4.65795 7.77841 4.94869 7.62561C5.23943 7.47281 5.59489 7.69708 6.30582 8.14568L6.48975 8.26168C6.6918 8.38921 6.7928 8.45294 6.90913 8.46888C7.02547 8.48474 7.144 8.45108 7.381 8.38374L7.5968 8.32241C8.43093 8.08541 8.848 7.96688 9.0712 8.19008C9.2944 8.41328 9.17587 8.83028 8.93886 9.66441L8.87753 9.88021C8.81013 10.1173 8.77646 10.2358 8.7924 10.3521C8.80833 10.4685 8.87206 10.5695 8.99953 10.7715L9.1156 10.9554C9.5642 11.6663 9.78846 12.0218 9.63566 12.3125C9.48286 12.6033 9.05413 12.6368 8.19673 12.7037L7.97493 12.7211C7.73127 12.7401 7.60947 12.7496 7.50293 12.8055C7.3964 12.8615 7.31733 12.9576 7.15906 13.1499L7.015 13.3248C6.45809 14.0012 6.17964 14.3394 5.86203 14.2959C5.54441 14.2525 5.39796 13.8561 5.10507 13.0633L5.0293 12.8582C4.94607 12.6329 4.90445 12.5203 4.8227 12.4385C4.74095 12.3568 4.62831 12.3152 4.40303 12.2319L4.19793 12.1562C3.40519 11.8633 3.0088 11.7169 2.96531 11.3992C2.92183 11.0816 3.26002 10.8031 3.93642 10.2463L4.02923 10.1699C3.88577 10.0291 3.72384 9.86741 3.54108 9.68188C2.98655 9.11894 2.49868 8.55294 2.09563 8.00368C2.01406 7.89248 1.93596 7.78201 1.86149 7.67241C1.78214 7.55554 1.70691 7.43974 1.63598 7.32501C1.59904 7.26528 1.56327 7.20588 1.52869 7.14684C1.46136 7.03184 1.39855 6.91815 1.34045 6.80596C1.3184 6.7634 1.29686 6.72071 1.27587 6.67793C1.18807 6.49904 1.11229 6.32352 1.04953 6.15228C0.994166 6.00118 0.947286 5.8487 0.911479 5.69658C0.794092 5.19905 0.797999 4.71802 0.994592 4.29906C1.15993 3.9467 1.42978 3.70507 1.75397 3.55189C1.94082 3.46361 2.14572 3.4047 2.35907 3.3709C2.93254 3.28006 3.61986 3.35725 4.35731 3.55208C5.83897 3.94352 7.66833 4.84911 9.51013 6.15748C11.354 7.46728 12.897 8.95814 13.8995 10.3224C14.2313 10.7739 14.5097 11.2193 14.7201 11.6466C14.7874 11.7831 14.8477 11.9178 14.9006 12.0503C14.9318 12.1284 14.9605 12.2057 14.9864 12.2822C15.1905 12.8836 15.2531 13.5057 15.0054 14.0336C14.8239 14.4204 14.5211 14.6709 14.1583 14.8196C14.0119 14.88 13.8559 14.9238 13.6945 14.9527C13.5572 14.9773 13.4131 14.9919 13.2634 14.9973C13.2402 14.9981 13.2169 14.9987 13.1937 14.9991C13.0964 15.0007 12.9964 14.9987 12.8938 14.9929C12.6935 14.9816 12.4835 14.9565 12.2654 14.9183C11.7157 14.8223 11.1141 14.6438 10.4845 14.3975C10.2273 14.2969 10.1004 14.0068 10.2011 13.7497C10.3017 13.4925 10.5917 13.3656 10.8489 13.4662Z" fill="#C1FF70"/>
</svg>
          <p className="text-[13px] font-semibold tracking-[-0.02em] text-[#fff]">
            Autoplay
          </p>
        </div>
      </div>
     
      <MysteryCardSlider />
      
    </div>
  );
};

export default Mystery;
